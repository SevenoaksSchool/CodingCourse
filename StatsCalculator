//Stats Calculator - Mean, Std. Dev, Median, Mode
#include<iostream>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<math.h>
using namespace std;
double mean(vector<double> data, vector<double>::size_type vectorSize);

int main()
{
    double x; //define standard input
    vector<double> data; //define container vector 
    
    cout<<"Hello, please input data followed by \"end\""<<endl;
    
    while(cin>>x) //while loop reads input into vector
    data.push_back(x);
    
    typedef vector<double>::size_type vec_sz; //rename .size() output type to vec_sz
    vec_sz vectorSize = data.size(); //define vector size    
    
    if(vectorSize==0){ //check user has input data
                      cout<<"You must enter data, please try again."<<endl;
                      system("Pause");
                      return (1);}
    
    //calculate median
    sort(data.begin(),data.end()); //sort vector elements
    vec_sz mid = vectorSize/2; //define the midpoint    
    double median = vectorSize%2 == 0? (data[mid]+data[mid-1])/2:data[mid];
    cout<<"The median is "<<median<<endl;

    //call mean function
    cout<<"The mean is "<<mean(data,vectorSize)<<endl; //output mean to console

    //calculate std dev
    double sq_sum = 0;
    for(vector<double>::iterator i=data.begin(); i!=data.end(); ++i){
    sq_sum += pow(*i-mean(data, vectorSize),2);
    }
   
    double std_dev = pow((sq_sum/vectorSize),0.5);
    cout<<"The standard deviation is "<<std_dev<<endl;

    system("Pause");
    return(0);
}


// mean function
 double mean(vector<double> data, vector<double>::size_type vectorSize)
 {
    double elementsSum = 0; //define initial sum

    for (vector<double>::iterator i=data.begin(); i!=data.end(); ++i){
         //increment vector position
    elementsSum += *i; //add value at given position to previous loop sum
}

    double mean = elementsSum/vectorSize; //calculate mean
    return mean;
}
